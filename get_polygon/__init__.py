# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AddressToPolygon
                                 A QGIS plugin
 get polygon by address
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-04-02
        copyright            : (C) 2025 by Bezdares
        email                : bezdares@gmail.com
        git sha              : $Format:%H$
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""

# noinspection PyPep8Naming


import sys
import os
import subprocess

REQUIRED_PACKAGES = ['overpy', 'geopy', 'pandas']
INSTALLED_FLAG_FILE = os.path.join(os.path.dirname(__file__), 'deps_installed.flag')


def install_dependencies():
    for pkg in REQUIRED_PACKAGES:
        try:
            __import__(pkg)
        except ImportError:
            print(f"[Plugin] Устанавливаем зависимость: {pkg}")
            subprocess.check_call([sys.executable, "-m", "pip", "install", pkg])


# noinspection PyPep8Naming
def classFactory(iface):  # pylint: disable=invalid-name
    if not os.path.exists(INSTALLED_FLAG_FILE):
        try:
            install_dependencies()
            # помечаем, что зависимости установлены
            with open(INSTALLED_FLAG_FILE, 'w') as f:
                f.write('ok')
        except Exception as e:
            from qgis.PyQt.QtWidgets import QMessageBox
            QMessageBox.critical(None, "Ошибка установки зависимостей",
                                 f"Не удалось установить зависимости:\n{str(e)}")
            raise e  # Прекращаем загрузку плагина

    from .get_polygon import AddressToPolygon
    return AddressToPolygon(iface)


